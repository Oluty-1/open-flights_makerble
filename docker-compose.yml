version: '3.8'
services:


  app:
    build: .
    container_name: openflights_app
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://user:password@openflights_db:5432/openflights
      - ROOT_URL=http://localhost:3000
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - SENDGRID_USERNAME=${SENDGRID_USERNAME}
      - SENDGRID_PASSWORD=${SENDGRID_PASSWORD}
      - DEFAULT_FROM_EMAIL=${DEFAULT_FROM_EMAIL}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network


  db:
    image: postgres:14-alpine
    container_name: openflights_db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=openflights
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network


  sidekiq:
    build: .
    container_name: openflights_sidekiq
    command: bundle exec sidekiq
    environment:
      - RAILS_ENV=production
      - DATABASE_URL=postgresql://user:password@openflights_db:5432/openflights
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network


volumes:
  pgdata:
networks:
  app-network:
    driver: bridge