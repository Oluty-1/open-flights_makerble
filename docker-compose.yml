version: '3.8'
services:
  db:
    image: postgres:14-alpine
    container_name: openflights_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: openflights
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    container_name: openflights_redis
    networks:
      - app-network

  app:
    build: .
    container_name: openflights_app
    ports:
      - "3000:3000"
    environment:
      RAILS_ENV: development
      REDIS_URL: redis://openflights_redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  sidekiq:
    build: .
    container_name: openflights_sidekiq
    environment:
      RAILS_ENV: development
      REDIS_URL: redis://openflights_redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network
    command: ["bundle", "exec", "sidekiq"]

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge